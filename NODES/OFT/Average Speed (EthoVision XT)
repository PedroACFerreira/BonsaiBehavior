from System import Tuple

# This node calculates speed similarly to the software EthoVision XT

# Settings variable call

VideoFR = 0  # Video frame rate
TBins = 0  # Do you want time bins? (True/False)
Min = 0     # Minutes per time bin
Ratio = 0  # Conversion ratio pixel to centimeter
Error = 0   # Pixels to move in one frame to be considered an error

################

TDistance = 0
TBinsDistance = 0
Speed = 0
TBSpeed = 0
PrevTBDis = 0
Frame = 0
SpeedCounter = 0
TBSpeedCounter = 0
TBinFR = Min * 60 * VideoFR
Time = 0

################

@returns(Tuple[float,float,float])
def process(value):
  
  global TDistance
  global TBinsDistance
  global PrevTBDis
  global Speed
  global TBSpeed
  global SpeedCounter
  global TBSpeedCounter
  global Frame
  global Time

  global VideoFR
  global TBins
  global Min
  global Ratio
  global Error
  global TBinFR

  VideoFR = value.Item3.Item1
  TBins = value.Item3.Item2[0]
  Min = value.Item3.Item3
  Ratio = value.Item3.Item4
  Error = value.Item3.Item5

  Time = value.Item1.TotalMilliseconds
  Current = value.Item2
  Frame += 1
  SpeedCounter += 1
  TBSpeedCounter += 1
  TBinFR = Min * 60 * VideoFR

# Error handling

  if not Current > -1:
    Current = 0
  if Current > Error:
    Current = 0

# Check to see if new video has begun, reset all values

  if Time == 0:
    TDistance = 0
    TBinsDistance = 0
    Speed = 0
    TBSpeed = 0
    PrevTBDis = 0
    Frame = 0
    SpeedCounter = 0
    TBSpeedCounter = 0

# Adds up euclidean distance each frame and calculate speed

  TDistance = TDistance + Current
  
  if SpeedCounter != 0:
    Speed = ((TDistance*Ratio)/SpeedCounter)*VideoFR

# Time bin calculation

  if TBins == 1:
    if Frame == TBinFR:
      Frame = 0
      TBinsDistance = TDistance - PrevTBDis
      PrevTBDis = TDistance
      TBSpeed = TBinsDistance*Ratio/TBSpeedCounter*VideoFR
      TBSpeedCounter = 0
 
# Results

  return Tuple.Create(float(Speed), float(TBSpeed), float(TBSpeedCounter))
