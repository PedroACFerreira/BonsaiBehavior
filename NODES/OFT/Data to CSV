from System import Tuple

Header = 0
TBins = 1
Counter = 0 
Min = 0
VideoFR = 0
TotalValue = 0
Distance = 0
MDistance = 0
Speed = 0
MSpeed = 0
Mobility = 0
Ratio = 0

@returns(str)
def process(value):

  global Header
  global TBins
  global Counter 
  global VideoFR
  global TotalValue
  global Distance  
  global MDistance  
  global Speed  
  global MSpeed 
  global Mobility 
  global Ratio

  Ratio = value.Item3.Item4
  VideoFR = value.Item3.Item1
 
  TBins = value.Item3.Item2[0]
  FinalData = ""
  BinData = ""
  ActualMin = 0
  ActualMin2 = 0
  Timepoint = []
  Timepointz = ""

  FolderPath = value.Item4.split('\\')
  Folder = FolderPath[-2]
  Counter = 0

  Frame = value.Item1[1]
  if (Frame + 300) > 60*VideoFR:
    m , s = divmod(((Frame+300)/VideoFR), 60)
  else:
    m = 0
    s = int(round((Frame+300)/60,0))
  Min = value.Item3.Item3
  VideoFR = value.Item3.Item1
  TBinFR = Min * 60 * VideoFR 
  
  Final = value.Item1[0]

  if Header == 0:
    Header = 1
    FinalData += "Folder;" + "FileName;" + "ID;" + "Condition;" + "Time;" + "Total Distance;" + "Total MDistance;" + "Average Speed;" + "Average MSpeed;" + "Time not Moving\n"

  if TBins == 1:
    for i in value.Item2:
      Counter += 1
      ActualMin = Min * Counter
      ActualMin2 = Min * (Counter-1)
      splitz = [x + ";" for x in i.split(";")]
      FileName = splitz[0]
      MobList = [(i.split(";")[-1])]
      Minutes1 = str(int(round(ActualMin2-0.5,0))) + "min" + str(int(round(((ActualMin2-int(round(ActualMin2-0.5,0)))*60),0))) + "sec"
      if ActualMin2 == 0:
        Minutes1= "0min"
      Minutes2 = str(int(round(ActualMin-0.5,0))) + "min" + str(int(round(((ActualMin-int(round(ActualMin-0.5,0)))*60),0))) + "sec"
      TimePoint = [str(Minutes1) + " to " + str(Minutes2) + ";"]
      Data = splitz[:3] + TimePoint + splitz[3:-1] + MobList
      for a in Data:
        BinData += a
      FinalData += (Folder + ";" + BinData).replace(".",",")
      BinData = ""
      
      ValueSplit = i.split(";")
      ValueFinal = Final.split(";")
      Distance += float(ValueSplit[-5])
      MDistance += float(ValueSplit[-4])
      Speed += float(ValueSplit[-3])
      MSpeed += float(ValueSplit[-2])
      Mobility += float(ValueSplit[-1])

    if Frame >= ((Counter*TBinFR)+(TBinFR*0.1)): 
      FDistance = str(float(ValueFinal[-5]) - Distance) + ";"
      FMDistance = str(float(ValueFinal[-4]) - MDistance) + ";"
      if value.Item1[2] != 0:
        FSpeed = str((float(ValueFinal[-5]) - Distance)/value.Item1[2]*VideoFR) + ";"
      else:
        FSpeed = str(round((float(ValueFinal[-5]) - Distance)*VideoFR,1)) + ";"
      if value.Item1[3] != 0:
        FMSpeed = str((float(ValueFinal[-4]) - MDistance)/value.Item1[3]*VideoFR) + ";"
      else:
        FMSpeed = str(round((float(ValueFinal[-4]) - MDistance)*VideoFR,1)) + ";"
      FMobility = str(float(ValueFinal[-1]) - Mobility) + "\n"

      Minutes1 = str(int(round(ActualMin-0.5,0))) + "min" + str(int(round(((ActualMin-int(round(ActualMin-0.5,0)))*60),0))) + "sec"
      TimePointz = Minutes1 + " to End;"
    
      FinalBin = Folder + ";" + FileName + " ;" + " ;" + TimePointz + FDistance + FMDistance + FSpeed + FMSpeed + FMobility 
        
      FinalData += (FinalBin).replace(".",",")

  Counter = 0
  TotalValue = 0
  Distance = 0
  MDistance = 0
  Speed = 0
  MSpeed = 0
  Mobility = 0

  FinalData += (Folder + ";" + Final).replace(".",",")

  return FinalData
