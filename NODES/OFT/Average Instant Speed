from System import Tuple

# This node calculates average instant speed by applying a movement threshold.

# Settings variable call

VideoFR = 0  # Video frame rate
TBins = 0  # Do you want time bins? (True/False)
Min = 0    # Minutes per time bin
Ratio = 0  # Conversion ratio pixel to centimeter
Threshold = 0 # Movement threshold - min pixels moved on average, every 5 frames
Error = 0    # Pixels to move in five frames to be considered an error

################

TDistance = 0
TBinsDistance = 0
PrevTBDis = 0
MSpeed = 0
TBMSpeed = 0
Accumulated = 0
Frame = 0
Counter = 0
MSpeedCounter = 0
TBMSpeedCounter = 0
TBinFR = Min * 60 * VideoFR
Time = 0

################

@returns(Tuple[float,float,float])
def process(value):
  
  global TDistance
  global TBinsDistance
  global PrevTBDis
  global MSpeed
  global TBMSpeed
  global MSpeedCounter
  global TBMSpeedCounter
  global Accumulated
  global Frame
  global TBinFR
  global Counter
  global Time 

  global VideoFR
  global TBins
  global Min
  global Ratio
  global Error
  global Threshold
  global TBinFR

  VideoFR = value.Item3.Item1
  TBins = value.Item3.Item2[0]
  Min = value.Item3.Item3
  Ratio = value.Item3.Item4
  Error = value.Item3.Item6
  Threshold = value.Item3.Item7

  Time = value.Item1.TotalMilliseconds
  Current = value.Item2
  Accumulated += Current
  Frame += 1
  Counter += 1
  TBinFR = Min * 60 * VideoFR

# Error handling

  if not Current > -1:
    Current = 0
  if Current > Error:
    Current = 0

# Check to see if new video has begun, reset all values

  if Time == 0:
    TDistance = 0
    TBinsDistance = 0
    MSpeed = 0
    TBMSpeed = 0
    PrevTBDis = 0
    Accumulated = 0
    Frame = 0
    Counter = 0
    MSpeedCounter = 0
    TBMSpeedCounter = 0

# Adds up euclidean distance each frame and calculate speed

  if Counter == 5:
    Counter = 0
    if Accumulated/5 > Threshold:
      TDistance = TDistance + Accumulated
      MSpeedCounter += 5
      TBMSpeedCounter += 5
      Accumulated = 0
    else:
      Accumulated = 0

  if MSpeedCounter != 0:
    MSpeed = TDistance*Ratio/MSpeedCounter*VideoFR
    
# Time bins calculation

  if TBins == 1:
    if Frame == TBinFR:
      Frame = 0
      TBinsDistance = TDistance - PrevTBDis
      PrevTBDis = TDistance
      if TBMSpeedCounter != 0:
        TBMSpeed = TBinsDistance*Ratio/TBMSpeedCounter*VideoFR
        TBMSpeedCounter = 0
      else:
        TBMSpeed = 0
        TBMSpeedCounter = 0

# Results

  return Tuple.Create(float(MSpeed), float(TBMSpeed), float(TBMSpeedCounter))
